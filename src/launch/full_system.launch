<launch>
<!-- 
    This launch file is responsible for launching the entire entire system
    (High and Low Level AI/Control, and Serial Communication With Arduino)
-->
    <!-- Message Remaps -->
    <remap from="decision_node/output" to="velocity_publisher"/>
    <remap from="arduino" to="Arduino"/>

    <!-- TODO: Start Camera Here -->

    <node pkg="usb_cam" type="usb_cam_node" name="cam_node1">       
       <param name="video_device" value="/dev/video1" />
       <param name="camera_name" value="camera1" /> 
    </node>
    <node pkg="usb_cam" type="usb_cam_node" name="cam_node0">        
       <param name="video_device" value="/dev/video0" />
       <param name="camera_name" value="camera0" /> 
    </node>
   
    <node ns="cam_node1" name="proc1" pkg="image_proc" type="image_proc" output="screen">
    </node>
    <node ns="cam_node0" name="proc0" pkg="image_proc" type="image_proc" output="screen">
    </node>

    <!-- IMU -->
    <include file="$(find controller)/launch/imu.launch"/>

    <!-- High Level AI -->
    <include file="$(find decision)/launch/decision_node.launch"/>
    <include file="$(find worldstate)/launch/worldstate_node.launch"/>
    <include file="$(find gate_detect)/launch/gate_detect.launch"/>

    <!-- HSV Filters for Various Components -->
    <include file="$(find vision)/launch/gate_detect_filter.launch"/>

    <!-- Lower Level Controller -->
    <include file="$(find controller)/launch/controller_node.launch"/>

    <!-- Serial Communication With The Arduino -->
    <node name="serial_node" pkg="rosserial_python" type="serial_node.py" output="screen">
        <param name="port" value="/dev/ttyACM2"/>
    </node>
    

</launch>
